#define PIN 13        // пин DI
#define NUM_LEDS 110 // число диодов
#include <Arduino.h>
#include <Adafruit_NeoPixel.h>
int xx = 110,xc =110;
int botPin1 = 7;
int botPin2 = 6;
int botPin3 = 5;
int botPin4 = 4;
unsigned long button1_timer;
int debounce = 150 ;
bool z = true, butFlag = 0;
int x = 99,  xxx = 1;
int m = 0, butUp = 0, butDown = 0, butLeft = 0, butRight = 0;
int arr[110][3], body[2];
int y= 0,i = 0,p = 0, rt = 0, r=0, g ;
int X_pos, Y_pos, last_diod, but_Flag;
int mem = 0, mem1=0, mem2=0,mem3=0,mem4=0,mem5=0,mem6=0,mem7=0,mem8=0,mem9=0;
int flag_pos_tel1 = 0,  flag_pos_tel2 = 0 , flag_pos_tel3 = 0 ,flag_pos_tel4 = 0, flag_pos_tel5=0,
flag_pos_tel6=0,flag_pos_tel7=0,flag_pos_tel8=0, flag_pos_tel9=0,flag_pos_tel10=0; 
int randd, flag_apple = 1 ; 
int pos_tail1=-1,pos_tail2=-1,pos_tail3=-1,pos_tail4=-1,pos_tail5=-1,pos_tail6=-1,pos_tail7=-1,pos_tail8=-1, 
pos_tail9=-1,pos_tail10=-1,pos_tail11=-1;
int  count = 0;
Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_LEDS, PIN, NEO_GRB + NEO_KHZ800);
void set_pos(){
  X_pos = Y_pos = 5; 
}

void search_nom_led(){
  for (int f = 0; f<xx;  f++){
    if (arr[f][1] == X_pos && arr[f][2 == Y_pos]){
      // strip.setPixelColor(f, 0xff0000);
      // strip.show();
      // Serial.println(f);
    }
  }
}

void set_apple(){
  randd = random(110);
  strip.setPixelColor(randd, 0x00ff00);
  strip.show();
}
void setup() {
  Serial.begin(9600);
  strip.begin();
  strip.setBrightness(50);    // яркость, от 0 до 255
  strip.clear();                          // очистить
  strip.show(); 
  pinMode(botPin1, INPUT_PULLUP);
  pinMode(botPin2, INPUT_PULLUP);
  pinMode(botPin3, INPUT_PULLUP); 
  pinMode(botPin4, INPUT_PULLUP);                            // отправить на ленту
}
void loop() {
  // strip.setPixelColor(110, 0xff0000);
  // strip.show();
  //  strip.setPixelColor(89, 0xff0000);
  //  strip.show();
  //   strip.setPixelColor(88, 0xff0000);
  //   strip.show();
  //    strip.setPixelColor(67, 0xff0000);
  //   strip.show();

  // условие 1 для заполнения массива матрицей из светодиодов 
  while (z == true){
    for(i=0; i<10; i++){
      for (y=0 ; y<11; y++){
        if (xx == x){
          m++;
          x=x-11;
        }
        else if (xx == 1){
          z = false;
          p = 1;
        }
        arr[xx][0]=0;
        arr[xx][1]=i;
        arr[xx][2]=y;
        xx--;
      }
    }
  }

  // условие 2 коррекция матрици из светодиодов 
  while (p == 1){
    for(r=0; r<=9; r++){
      for (rt=10 ; rt>-1; rt--){
        if(r == xxx && rt!=0){
          arr[xc][2]=rt;
        }
        else if (rt == 0 && r==xxx){
          if (r==9){
            p = 0;
            set_pos();
          }
          xxx=xxx+2;
        }
        xc--;
      }
    }  
  }
  while(true){
    // foo drop apple
    while (flag_apple == 1){
      set_apple();
      Serial.print("new pos apple ");
      Serial.println(randd);
      flag_apple = 0;
    }
    // считывание нажатий 
    butUp = !digitalRead(botPin1);
    butDown =!digitalRead(botPin3);
    butRight = !digitalRead(botPin2);
    butLeft = !digitalRead(botPin4); 

    // выставление флагов для линейного движения змеи
    if(butUp == 1 ){
      but_Flag = 1; 
    }
    if (butDown == 1){
      but_Flag = 2;
    }
    if(butLeft == 1 ){
      but_Flag = 3; 
    }
    if (butRight == 1){
      but_Flag = 4;
    }
    
    // условия для определения нажатия 
    if (butUp==1 || but_Flag == 1 && millis() - button1_timer > debounce){
      button1_timer = millis();
      butFlag = 0;
      Y_pos++;
      Serial.println("up");
    }
    if (butDown==1 || but_Flag == 2 && millis() - button1_timer > debounce){
      button1_timer = millis();
      butFlag = 0;
      Y_pos--; 
      Serial.println("down");
    }
    if (butLeft==1|| but_Flag==3 && millis() - button1_timer > debounce){
      button1_timer = millis();
      butFlag = 0;
      X_pos--; 
      Serial.println("left");
    }
    if (butRight==1 || but_Flag==4 && millis() - button1_timer > debounce){
      button1_timer = millis();
      butFlag = 0;
      X_pos++;
      Serial.println("right");
    }
    
    //отрисовщик передвижения головы 
    if(last_diod != g){           
      strip.clear();
    }
               //закончил тут надо хранить в переменной прошлое значение 
    Serial.print("pos tel ");
    Serial.println(pos_tail1);
    // определение по координатам какой светодиод зажигать 
    for(g=0; g<110; g++){
     
      // когда координаты определены зажеч диод под номером g
      if(arr[g][1] == X_pos && arr[g][2] == Y_pos && arr[g][0] == 0){
        Serial.println(g-1);
        
        // когда номер светодиода совпадает с яблоком установить новое
        if(g-1 == randd){
          Serial.println("eat++++++ ");
          flag_apple = 1;
          count++;
          if(count == 1){
            flag_pos_tel1 = 1;
          }
          if(count == 2){
            flag_pos_tel2 = 1;
          }
          if(count == 3){
            flag_pos_tel3 = 1;
          }
          if(count == 4){
            flag_pos_tel4 = 1;
          } 
          if(count == 5){
            flag_pos_tel5 = 1;
          }
          if(count == 6){
            flag_pos_tel6 = 1;
          }
          if(count == 7){
            flag_pos_tel7 = 1;
          }
          if(count == 8){
            flag_pos_tel8 = 1;
          }
          if(count == 9){
            flag_pos_tel9 = 1;
          }
          if(count == 10){
            flag_pos_tel10 = 1;
          }

        }
        // зажигалка 
        strip.setPixelColor(g-1, 0xff0000);
        strip.show();
        if(flag_pos_tel1 == 1){
          mem++;
          if(mem == 2 || mem>2){
            strip.setPixelColor(pos_tail1, 0x0000ff);
            strip.show();
            pos_tail11 = pos_tail10; 
            pos_tail10 = pos_tail9; 
            pos_tail9 = pos_tail8;
            pos_tail8 = pos_tail7;
            pos_tail7 = pos_tail6;
            pos_tail6 = pos_tail5; 
            pos_tail5 = pos_tail4;
            pos_tail4 = pos_tail3;
            pos_tail3 = pos_tail2;
            pos_tail2 = pos_tail1;
            pos_tail1 = g-1;
            
            if(flag_pos_tel2 == 1){
              mem1++;
              if(mem1 == 3 || mem1>3){
                strip.setPixelColor(pos_tail2, 0x0000ff);
                strip.show();

                if(flag_pos_tel3 == 1){
                  mem2++;
                  if(mem2 == 4 || mem2>4){ 
                    strip.setPixelColor(pos_tail3, 0x0000ff);
                    strip.show();
                    
                    if(flag_pos_tel4 == 1){
                      mem3++;
                      if(mem3 == 5 || mem3>5){
                        strip.setPixelColor(pos_tail4, 0x0000ff);
                        strip.show();
                        
                        if(flag_pos_tel5 == 1){
                          mem4++;
                          if(mem4 == 6 || mem4>6){ 
                            strip.setPixelColor(pos_tail5, 0x0000ff);
                            strip.show();
                            
                            if(flag_pos_tel6 == 1){
                              mem5++;
                              if(mem5 == 7 || mem5>7){
                                strip.setPixelColor(pos_tail5, 0x0000ff);
                                strip.show();
                                
                                if(flag_pos_tel7 == 1){
                                  mem6++;
                                  if(mem6 == 8 || mem6>8){
                                    strip.setPixelColor(pos_tail6, 0x0000ff);
                                    strip.show();
                                    
                                    if(flag_pos_tel8 == 1){
                                      mem7++;
                                      if(mem7 == 9 || mem7>9){ 
                                        strip.setPixelColor(pos_tail7, 0x0000ff);
                                        strip.show();
                                        
                                      }
                                    } 
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              } 
            }
          } 
        }
        
        strip.setPixelColor(randd,0x00ff00);
        strip.show();
        delay(1000);
        break;

      }
    }
    // когда выход за поле игра начинается заново 
    if (X_pos  > 9 || X_pos < 0 || Y_pos > 10 || Y_pos < 0){
      set_pos();
      but_Flag = 0;
      flag_pos_tel1 = flag_pos_tel2 = flag_pos_tel3 = flag_pos_tel4 = 0;
      mem = mem1 = mem2 = mem3 = 0;
      count=0;
      Serial.println("++++++");
    }
  }
}
